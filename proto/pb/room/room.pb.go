// Code generated by protoc-gen-go. DO NOT EDIT.
// source: room.proto

/*
Package room is a generated protocol buffer package.

It is generated from these files:
	room.proto

It has these top-level messages:
	RoomInfo
	C2SEnterRoomReq
	S2CEnterRoomRsp
	C2SCreateRoomReq
	S2CCreateRoomRsp
*/
package room

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import proto_common "github.com/master-g/omgo/proto/pb/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoomType int32

const (
	RoomType_ROOM_RESERVED RoomType = 0
	RoomType_ROOM_NORMAL   RoomType = 1
	RoomType_ROOM_PRIVATE  RoomType = 2
)

var RoomType_name = map[int32]string{
	0: "ROOM_RESERVED",
	1: "ROOM_NORMAL",
	2: "ROOM_PRIVATE",
}
var RoomType_value = map[string]int32{
	"ROOM_RESERVED": 0,
	"ROOM_NORMAL":   1,
	"ROOM_PRIVATE":  2,
}

func (x RoomType) String() string {
	return proto.EnumName(RoomType_name, int32(x))
}
func (RoomType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GameMode int32

const (
	GameMode_GAME_MODE_RESERVED GameMode = 0
	GameMode_GAME_MODE_RACE     GameMode = 1
	GameMode_GAME_MODE_CALL     GameMode = 2
)

var GameMode_name = map[int32]string{
	0: "GAME_MODE_RESERVED",
	1: "GAME_MODE_RACE",
	2: "GAME_MODE_CALL",
}
var GameMode_value = map[string]int32{
	"GAME_MODE_RESERVED": 0,
	"GAME_MODE_RACE":     1,
	"GAME_MODE_CALL":     2,
}

func (x GameMode) String() string {
	return proto.EnumName(GameMode_name, int32(x))
}
func (GameMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type EnterRoomResult int32

const (
	EnterRoomResult_ENTER_ROOM_OK                  EnterRoomResult = 0
	EnterRoomResult_ENTER_ROOM_INSUFFICIENT_CREDIT EnterRoomResult = 1
	EnterRoomResult_ENTER_ROOM_WRONG_PASSWORD      EnterRoomResult = 2
	EnterRoomResult_ENTER_ROOM_NOT_EXIST           EnterRoomResult = 3
	EnterRoomResult_ENTER_ROOM_FULL                EnterRoomResult = 4
	EnterRoomResult_ENTER_ROOM_FAIL_NO_OBSERVE     EnterRoomResult = 5
)

var EnterRoomResult_name = map[int32]string{
	0: "ENTER_ROOM_OK",
	1: "ENTER_ROOM_INSUFFICIENT_CREDIT",
	2: "ENTER_ROOM_WRONG_PASSWORD",
	3: "ENTER_ROOM_NOT_EXIST",
	4: "ENTER_ROOM_FULL",
	5: "ENTER_ROOM_FAIL_NO_OBSERVE",
}
var EnterRoomResult_value = map[string]int32{
	"ENTER_ROOM_OK":                  0,
	"ENTER_ROOM_INSUFFICIENT_CREDIT": 1,
	"ENTER_ROOM_WRONG_PASSWORD":      2,
	"ENTER_ROOM_NOT_EXIST":           3,
	"ENTER_ROOM_FULL":                4,
	"ENTER_ROOM_FAIL_NO_OBSERVE":     5,
}

func (x EnterRoomResult) String() string {
	return proto.EnumName(EnterRoomResult_name, int32(x))
}
func (EnterRoomResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CreateRoomResult int32

const (
	CreateRoomResult_CREATE_ROOM_OK                CreateRoomResult = 0
	CreateRoomResult_CREATE_ROOM_INVALID_PASSWORD  CreateRoomResult = 1
	CreateRoomResult_CREATE_ROOM_INVALID_PARAM     CreateRoomResult = 2
	CreateRoomResult_CREATE_ROOM_INSUFFICIENT_CARD CreateRoomResult = 3
)

var CreateRoomResult_name = map[int32]string{
	0: "CREATE_ROOM_OK",
	1: "CREATE_ROOM_INVALID_PASSWORD",
	2: "CREATE_ROOM_INVALID_PARAM",
	3: "CREATE_ROOM_INSUFFICIENT_CARD",
}
var CreateRoomResult_value = map[string]int32{
	"CREATE_ROOM_OK":                0,
	"CREATE_ROOM_INVALID_PASSWORD":  1,
	"CREATE_ROOM_INVALID_PARAM":     2,
	"CREATE_ROOM_INSUFFICIENT_CARD": 3,
}

func (x CreateRoomResult) String() string {
	return proto.EnumName(CreateRoomResult_name, int32(x))
}
func (CreateRoomResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type RoomInfo struct {
	Id          uint64                 `protobuf:"fixed64,1,opt,name=id" json:"id,omitempty"`
	Owner       uint64                 `protobuf:"fixed64,2,opt,name=owner" json:"owner,omitempty"`
	RoomType    RoomType               `protobuf:"varint,3,opt,name=room_type,json=roomType,enum=proto.room.RoomType" json:"room_type"`
	GameMode    GameMode               `protobuf:"varint,4,opt,name=game_mode,json=gameMode,enum=proto.room.GameMode" json:"game_mode"`
	Title       string                 `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Desc        string                 `protobuf:"bytes,6,opt,name=desc" json:"desc,omitempty"`
	Since       uint64                 `protobuf:"fixed64,7,opt,name=since" json:"since,omitempty"`
	Observable  bool                   `protobuf:"varint,8,opt,name=observable" json:"observable"`
	TotalRounds int32                  `protobuf:"varint,9,opt,name=total_rounds,json=totalRounds" json:"total_rounds"`
	LeftRounds  int32                  `protobuf:"varint,10,opt,name=left_rounds,json=leftRounds" json:"left_rounds"`
	BoomLimit   int32                  `protobuf:"varint,11,opt,name=boom_limit,json=boomLimit" json:"boom_limit"`
	Players     []uint64               `protobuf:"fixed64,12,rep,packed,name=players" json:"players,omitempty"`
	Secure      bool                   `protobuf:"varint,13,opt,name=secure" json:"secure"`
	Location    *proto_common.Location `protobuf:"bytes,14,opt,name=location" json:"location,omitempty"`
}

func (m *RoomInfo) Reset()                    { *m = RoomInfo{} }
func (m *RoomInfo) String() string            { return proto.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()               {}
func (*RoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RoomInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RoomInfo) GetOwner() uint64 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *RoomInfo) GetRoomType() RoomType {
	if m != nil {
		return m.RoomType
	}
	return RoomType_ROOM_RESERVED
}

func (m *RoomInfo) GetGameMode() GameMode {
	if m != nil {
		return m.GameMode
	}
	return GameMode_GAME_MODE_RESERVED
}

func (m *RoomInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *RoomInfo) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *RoomInfo) GetSince() uint64 {
	if m != nil {
		return m.Since
	}
	return 0
}

func (m *RoomInfo) GetObservable() bool {
	if m != nil {
		return m.Observable
	}
	return false
}

func (m *RoomInfo) GetTotalRounds() int32 {
	if m != nil {
		return m.TotalRounds
	}
	return 0
}

func (m *RoomInfo) GetLeftRounds() int32 {
	if m != nil {
		return m.LeftRounds
	}
	return 0
}

func (m *RoomInfo) GetBoomLimit() int32 {
	if m != nil {
		return m.BoomLimit
	}
	return 0
}

func (m *RoomInfo) GetPlayers() []uint64 {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *RoomInfo) GetSecure() bool {
	if m != nil {
		return m.Secure
	}
	return false
}

func (m *RoomInfo) GetLocation() *proto_common.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type C2SEnterRoomReq struct {
	Type     RoomType `protobuf:"varint,1,opt,name=type,enum=proto.room.RoomType" json:"type"`
	RoomId   uint64   `protobuf:"fixed64,2,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	Password string   `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *C2SEnterRoomReq) Reset()                    { *m = C2SEnterRoomReq{} }
func (m *C2SEnterRoomReq) String() string            { return proto.CompactTextString(m) }
func (*C2SEnterRoomReq) ProtoMessage()               {}
func (*C2SEnterRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *C2SEnterRoomReq) GetType() RoomType {
	if m != nil {
		return m.Type
	}
	return RoomType_ROOM_RESERVED
}

func (m *C2SEnterRoomReq) GetRoomId() uint64 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *C2SEnterRoomReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type S2CEnterRoomRsp struct {
	Header *proto_common.RspHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *S2CEnterRoomRsp) Reset()                    { *m = S2CEnterRoomRsp{} }
func (m *S2CEnterRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*S2CEnterRoomRsp) ProtoMessage()               {}
func (*S2CEnterRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *S2CEnterRoomRsp) GetHeader() *proto_common.RspHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type C2SCreateRoomReq struct {
	CardNum    int32                  `protobuf:"varint,1,opt,name=card_num,json=cardNum" json:"card_num"`
	Password   string                 `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Title      string                 `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Desc       string                 `protobuf:"bytes,4,opt,name=desc" json:"desc,omitempty"`
	Observable bool                   `protobuf:"varint,5,opt,name=observable" json:"observable"`
	BoomLimit  int32                  `protobuf:"varint,6,opt,name=boom_limit,json=boomLimit" json:"boom_limit"`
	Secure     bool                   `protobuf:"varint,7,opt,name=secure" json:"secure"`
	Location   *proto_common.Location `protobuf:"bytes,8,opt,name=location" json:"location,omitempty"`
}

func (m *C2SCreateRoomReq) Reset()                    { *m = C2SCreateRoomReq{} }
func (m *C2SCreateRoomReq) String() string            { return proto.CompactTextString(m) }
func (*C2SCreateRoomReq) ProtoMessage()               {}
func (*C2SCreateRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *C2SCreateRoomReq) GetCardNum() int32 {
	if m != nil {
		return m.CardNum
	}
	return 0
}

func (m *C2SCreateRoomReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *C2SCreateRoomReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *C2SCreateRoomReq) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *C2SCreateRoomReq) GetObservable() bool {
	if m != nil {
		return m.Observable
	}
	return false
}

func (m *C2SCreateRoomReq) GetBoomLimit() int32 {
	if m != nil {
		return m.BoomLimit
	}
	return 0
}

func (m *C2SCreateRoomReq) GetSecure() bool {
	if m != nil {
		return m.Secure
	}
	return false
}

func (m *C2SCreateRoomReq) GetLocation() *proto_common.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type S2CCreateRoomRsp struct {
	Header *proto_common.RspHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *S2CCreateRoomRsp) Reset()                    { *m = S2CCreateRoomRsp{} }
func (m *S2CCreateRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*S2CCreateRoomRsp) ProtoMessage()               {}
func (*S2CCreateRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *S2CCreateRoomRsp) GetHeader() *proto_common.RspHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*RoomInfo)(nil), "proto.room.RoomInfo")
	proto.RegisterType((*C2SEnterRoomReq)(nil), "proto.room.C2SEnterRoomReq")
	proto.RegisterType((*S2CEnterRoomRsp)(nil), "proto.room.S2CEnterRoomRsp")
	proto.RegisterType((*C2SCreateRoomReq)(nil), "proto.room.C2SCreateRoomReq")
	proto.RegisterType((*S2CCreateRoomRsp)(nil), "proto.room.S2CCreateRoomRsp")
	proto.RegisterEnum("proto.room.RoomType", RoomType_name, RoomType_value)
	proto.RegisterEnum("proto.room.GameMode", GameMode_name, GameMode_value)
	proto.RegisterEnum("proto.room.EnterRoomResult", EnterRoomResult_name, EnterRoomResult_value)
	proto.RegisterEnum("proto.room.CreateRoomResult", CreateRoomResult_name, CreateRoomResult_value)
}

func init() { proto.RegisterFile("room.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 766 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xdd, 0x6e, 0xa3, 0x46,
	0x18, 0x5d, 0xfc, 0x83, 0xf1, 0xe7, 0xac, 0x3d, 0x9d, 0x46, 0x59, 0x36, 0x6a, 0x52, 0xd6, 0x17,
	0x15, 0x8a, 0xd4, 0x58, 0xa5, 0x2f, 0x50, 0x82, 0x49, 0x4a, 0x8b, 0x61, 0x35, 0xb0, 0xd9, 0xaa,
	0x37, 0x08, 0x9b, 0x59, 0x2f, 0x12, 0x30, 0x14, 0x70, 0x57, 0x79, 0x85, 0x3e, 0x50, 0x6f, 0xfb,
	0x66, 0x55, 0x35, 0x63, 0xb2, 0xc6, 0xdd, 0xb4, 0xaa, 0x7a, 0xc5, 0x7c, 0xe7, 0x3b, 0xcc, 0x77,
	0x66, 0xce, 0x19, 0x80, 0x8a, 0xb1, 0xfc, 0xba, 0xac, 0x58, 0xc3, 0x30, 0x88, 0xcf, 0x35, 0x47,
	0xce, 0x4f, 0x36, 0x2c, 0xcf, 0x59, 0xb1, 0xef, 0xcc, 0xff, 0xe8, 0x83, 0x42, 0x18, 0xcb, 0x9d,
	0xe2, 0x1d, 0xc3, 0x53, 0xe8, 0xa5, 0x89, 0x2a, 0x69, 0x92, 0x2e, 0x93, 0x5e, 0x9a, 0xe0, 0x53,
	0x18, 0xb2, 0x0f, 0x05, 0xad, 0xd4, 0x9e, 0x80, 0xf6, 0x05, 0xfe, 0x06, 0xc6, 0x7c, 0xa3, 0xa8,
	0x79, 0x28, 0xa9, 0xda, 0xd7, 0x24, 0x7d, 0x6a, 0x9c, 0x5e, 0x1f, 0x06, 0x5c, 0xf3, 0xed, 0xc2,
	0x87, 0x92, 0x12, 0xa5, 0x6a, 0x57, 0xfc, 0x97, 0x6d, 0x9c, 0xd3, 0x28, 0x67, 0x09, 0x55, 0x07,
	0x9f, 0xfe, 0x72, 0x17, 0xe7, 0x74, 0xc5, 0x12, 0x4a, 0x94, 0x6d, 0xbb, 0xe2, 0xb3, 0x9b, 0xb4,
	0xc9, 0xa8, 0x3a, 0xd4, 0x24, 0x7d, 0x4c, 0xf6, 0x05, 0xc6, 0x30, 0x48, 0x68, 0xbd, 0x51, 0x65,
	0x01, 0x8a, 0x35, 0x67, 0xd6, 0x69, 0xb1, 0xa1, 0xea, 0x68, 0xaf, 0x52, 0x14, 0xf8, 0x12, 0x80,
	0xad, 0x6b, 0x5a, 0xfd, 0x1a, 0xaf, 0x33, 0xaa, 0x2a, 0x9a, 0xa4, 0x2b, 0xa4, 0x83, 0xe0, 0x57,
	0x70, 0xd2, 0xb0, 0x26, 0xce, 0xa2, 0x8a, 0xed, 0x8a, 0xa4, 0x56, 0xc7, 0x9a, 0xa4, 0x0f, 0xc9,
	0x44, 0x60, 0x44, 0x40, 0xf8, 0x4b, 0x98, 0x64, 0xf4, 0x5d, 0xf3, 0xc8, 0x00, 0xc1, 0x00, 0x0e,
	0xb5, 0x84, 0x0b, 0x80, 0x35, 0xbf, 0x89, 0x2c, 0xcd, 0xd3, 0x46, 0x9d, 0x88, 0xfe, 0x98, 0x23,
	0x2e, 0x07, 0xb0, 0x0a, 0xa3, 0x32, 0x8b, 0x1f, 0x68, 0x55, 0xab, 0x27, 0x5a, 0x5f, 0x97, 0xc9,
	0x63, 0x89, 0xcf, 0x40, 0xae, 0xe9, 0x66, 0x57, 0x51, 0xf5, 0xb9, 0x10, 0xd6, 0x56, 0xd8, 0x00,
	0x25, 0x63, 0x9b, 0xb8, 0x49, 0x59, 0xa1, 0x4e, 0x35, 0x49, 0x9f, 0x18, 0x67, 0xed, 0x35, 0xb5,
	0xa6, 0xb9, 0x6d, 0x97, 0x7c, 0xe4, 0xcd, 0x4b, 0x98, 0x59, 0x46, 0x60, 0x17, 0x0d, 0xad, 0xf8,
	0xcd, 0x13, 0xfa, 0x0b, 0xd6, 0x61, 0x20, 0xcc, 0x91, 0xfe, 0xc5, 0x1c, 0xc1, 0xc0, 0x2f, 0x60,
	0x24, 0xbc, 0x4c, 0x93, 0xd6, 0x63, 0x99, 0x97, 0x4e, 0x82, 0xcf, 0x41, 0x29, 0xe3, 0xba, 0xfe,
	0xc0, 0xaa, 0x44, 0x78, 0x3c, 0x26, 0x1f, 0xeb, 0xf9, 0x0d, 0xcc, 0x02, 0xc3, 0x3a, 0x4c, 0xac,
	0x4b, 0xbc, 0x00, 0xf9, 0x3d, 0x8d, 0x13, 0x5a, 0x89, 0x99, 0x13, 0xe3, 0xc5, 0xb1, 0x6c, 0x52,
	0x97, 0xdf, 0x8b, 0x36, 0x69, 0x69, 0xf3, 0x3f, 0x25, 0x40, 0x96, 0x11, 0x58, 0x15, 0x8d, 0x1b,
	0xfa, 0xa8, 0xfb, 0x25, 0x28, 0x9b, 0xb8, 0x4a, 0xa2, 0x62, 0x97, 0x8b, 0x7d, 0x86, 0x64, 0xc4,
	0x6b, 0x6f, 0x97, 0x1f, 0xe9, 0xe9, 0x1d, 0xeb, 0x39, 0x44, 0xa5, 0xff, 0x54, 0x54, 0x06, 0x9d,
	0xa8, 0x1c, 0x87, 0x62, 0xf8, 0x49, 0x28, 0x8e, 0x0d, 0x95, 0xff, 0x6e, 0xe8, 0xc1, 0xb6, 0xd1,
	0x3f, 0xda, 0xa6, 0xfc, 0x47, 0xdb, 0x2c, 0x40, 0x81, 0x61, 0x75, 0xce, 0xff, 0x3f, 0x6e, 0xf1,
	0xea, 0xbb, 0xfd, 0xe3, 0x15, 0x6f, 0xec, 0x33, 0x78, 0x4e, 0x7c, 0x7f, 0x15, 0x11, 0x3b, 0xb0,
	0xc9, 0xbd, 0xbd, 0x44, 0xcf, 0xf0, 0x0c, 0x26, 0x02, 0xf2, 0x7c, 0xb2, 0x32, 0x5d, 0x24, 0x61,
	0x04, 0x27, 0x02, 0x78, 0x4d, 0x9c, 0x7b, 0x33, 0xb4, 0x51, 0xef, 0xea, 0x07, 0x50, 0x1e, 0x1f,
	0x1f, 0x3e, 0x03, 0x7c, 0x67, 0xae, 0xec, 0x68, 0xe5, 0x2f, 0xed, 0xee, 0x36, 0x18, 0xa6, 0x1d,
	0xdc, 0xb4, 0x6c, 0x24, 0x1d, 0x63, 0x96, 0xe9, 0xba, 0xa8, 0x77, 0xf5, 0xbb, 0x04, 0xb3, 0x4e,
	0x0e, 0xeb, 0x5d, 0xd6, 0x70, 0x55, 0xb6, 0x17, 0xda, 0x24, 0x12, 0x73, 0xfd, 0x1f, 0xd1, 0x33,
	0x3c, 0x87, 0xcb, 0x0e, 0xe4, 0x78, 0xc1, 0x9b, 0xdb, 0x5b, 0xc7, 0x72, 0x6c, 0x2f, 0x8c, 0x2c,
	0x62, 0x2f, 0x9d, 0x10, 0x49, 0xf8, 0x02, 0x5e, 0x76, 0x38, 0x6f, 0x89, 0xef, 0xdd, 0x45, 0xaf,
	0xcd, 0x20, 0x78, 0xeb, 0x93, 0x25, 0xea, 0x61, 0x15, 0x4e, 0x3b, 0x6d, 0xcf, 0x0f, 0x23, 0xfb,
	0x27, 0x27, 0x08, 0x51, 0x1f, 0x7f, 0x0e, 0xb3, 0x4e, 0xe7, 0xf6, 0x8d, 0xeb, 0xa2, 0x01, 0xbe,
	0x84, 0xf3, 0x2e, 0x68, 0x3a, 0x6e, 0xe4, 0xf9, 0x91, 0x7f, 0x23, 0x4e, 0x88, 0x86, 0x57, 0xbf,
	0xf1, 0x30, 0x76, 0x92, 0x28, 0x94, 0x63, 0x98, 0x5a, 0xc4, 0x36, 0x43, 0xbb, 0x23, 0x5d, 0x83,
	0x2f, 0xba, 0x98, 0xe3, 0xdd, 0x9b, 0xae, 0xb3, 0x3c, 0x28, 0x13, 0xc2, 0x9f, 0x66, 0x10, 0x73,
	0x85, 0x7a, 0xf8, 0x15, 0x5c, 0x1c, 0xb7, 0xbb, 0x87, 0x37, 0xc9, 0x12, 0xf5, 0x6f, 0xf4, 0x9f,
	0xbf, 0xda, 0xa6, 0xcd, 0xfb, 0xdd, 0x9a, 0xdb, 0xbe, 0xc8, 0xe3, 0xba, 0xa1, 0xd5, 0xd7, 0xdb,
	0x05, 0xcb, 0xb7, 0x6c, 0x21, 0xe2, 0xb0, 0x28, 0xd7, 0x0b, 0xfe, 0x4a, 0xd7, 0xb2, 0x28, 0xbf,
	0xfd, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x62, 0xf7, 0x07, 0x9f, 0xea, 0x05, 0x00, 0x00,
}
