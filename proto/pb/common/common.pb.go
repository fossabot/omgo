// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	common.proto

It has these top-level messages:
	RspHeader
	UserInfo
	Location
	C2SGetSeedReq
	S2CGetSeedRsp
	C2SLoginReq
	S2CLoginRsp
	S2CKickNotify
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// / commands
// / S -> C : even
// / C -> S : odd
type Cmd int32

const (
	Cmd_RESERVED Cmd = 0
	// / Common Commands, handle by agent
	Cmd_HEART_BEAT_REQ Cmd = 1
	Cmd_HEART_BEAT_RSP Cmd = 2
	Cmd_KICK_NOTIFY    Cmd = 4
	Cmd_GET_SEED_REQ   Cmd = 17
	Cmd_GET_SEED_RSP   Cmd = 18
	Cmd_LOGIN_REQ      Cmd = 33
	Cmd_LOGIN_RSP      Cmd = 34
	Cmd_LOGOUT_REQ     Cmd = 51
	Cmd_LOGOUT_RSP     Cmd = 52
	Cmd_OFFLINE_REQ    Cmd = 135
	Cmd_PING_REQ       Cmd = 4097
	Cmd_PING_RSP       Cmd = 4098
	// / Hall Commands, handle by agent
	Cmd_ROOM_CONFIG_REQ Cmd = 8193
	Cmd_ROOM_CONFIG_RSP Cmd = 8194
	Cmd_CREATE_ROOM_REQ Cmd = 8195
	Cmd_CREATE_ROOM_RSP Cmd = 8196
	Cmd_ENTER_ROOM_REQ  Cmd = 8197
	Cmd_ENTER_ROOM_RSP  Cmd = 8198
	Cmd_CMD_COMMON_END  Cmd = 65536
	// / Room Commands, handle by game
	Cmd_EXIT_ROOM_REQ Cmd = 65543
	Cmd_EXIT_ROOM_RSP Cmd = 65544
)

var Cmd_name = map[int32]string{
	0:     "RESERVED",
	1:     "HEART_BEAT_REQ",
	2:     "HEART_BEAT_RSP",
	4:     "KICK_NOTIFY",
	17:    "GET_SEED_REQ",
	18:    "GET_SEED_RSP",
	33:    "LOGIN_REQ",
	34:    "LOGIN_RSP",
	51:    "LOGOUT_REQ",
	52:    "LOGOUT_RSP",
	135:   "OFFLINE_REQ",
	4097:  "PING_REQ",
	4098:  "PING_RSP",
	8193:  "ROOM_CONFIG_REQ",
	8194:  "ROOM_CONFIG_RSP",
	8195:  "CREATE_ROOM_REQ",
	8196:  "CREATE_ROOM_RSP",
	8197:  "ENTER_ROOM_REQ",
	8198:  "ENTER_ROOM_RSP",
	65536: "CMD_COMMON_END",
	65543: "EXIT_ROOM_REQ",
	65544: "EXIT_ROOM_RSP",
}
var Cmd_value = map[string]int32{
	"RESERVED":        0,
	"HEART_BEAT_REQ":  1,
	"HEART_BEAT_RSP":  2,
	"KICK_NOTIFY":     4,
	"GET_SEED_REQ":    17,
	"GET_SEED_RSP":    18,
	"LOGIN_REQ":       33,
	"LOGIN_RSP":       34,
	"LOGOUT_REQ":      51,
	"LOGOUT_RSP":      52,
	"OFFLINE_REQ":     135,
	"PING_REQ":        4097,
	"PING_RSP":        4098,
	"ROOM_CONFIG_REQ": 8193,
	"ROOM_CONFIG_RSP": 8194,
	"CREATE_ROOM_REQ": 8195,
	"CREATE_ROOM_RSP": 8196,
	"ENTER_ROOM_REQ":  8197,
	"ENTER_ROOM_RSP":  8198,
	"CMD_COMMON_END":  65536,
	"EXIT_ROOM_REQ":   65543,
	"EXIT_ROOM_RSP":   65544,
}

func (x Cmd) String() string {
	return proto.EnumName(Cmd_name, int32(x))
}
func (Cmd) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ResultCode int32

const (
	ResultCode_RESULT_OK             ResultCode = 0
	ResultCode_RESULT_TIMEOUT        ResultCode = 1
	ResultCode_RESULT_UNAUTH         ResultCode = 2
	ResultCode_RESULT_UNKNOWN_CMD    ResultCode = 3
	ResultCode_RESULT_INVALID        ResultCode = 4
	ResultCode_RESULT_INTERNAL_ERROR ResultCode = 5
)

var ResultCode_name = map[int32]string{
	0: "RESULT_OK",
	1: "RESULT_TIMEOUT",
	2: "RESULT_UNAUTH",
	3: "RESULT_UNKNOWN_CMD",
	4: "RESULT_INVALID",
	5: "RESULT_INTERNAL_ERROR",
}
var ResultCode_value = map[string]int32{
	"RESULT_OK":             0,
	"RESULT_TIMEOUT":        1,
	"RESULT_UNAUTH":         2,
	"RESULT_UNKNOWN_CMD":    3,
	"RESULT_INVALID":        4,
	"RESULT_INTERNAL_ERROR": 5,
}

func (x ResultCode) String() string {
	return proto.EnumName(ResultCode_name, int32(x))
}
func (ResultCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Gender int32

const (
	Gender_GENDER_UNKNOWN Gender = 0
	Gender_GENDER_FEMALE  Gender = 1
	Gender_GENDER_MALE    Gender = 2
)

var Gender_name = map[int32]string{
	0: "GENDER_UNKNOWN",
	1: "GENDER_FEMALE",
	2: "GENDER_MALE",
}
var Gender_value = map[string]int32{
	"GENDER_UNKNOWN": 0,
	"GENDER_FEMALE":  1,
	"GENDER_MALE":    2,
}

func (x Gender) String() string {
	return proto.EnumName(Gender_name, int32(x))
}
func (Gender) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type UserStatus int32

const (
	UserStatus_USER_STATUS_NORMAL     UserStatus = 0
	UserStatus_USER_STATUS_RESTRICTED UserStatus = 1
	UserStatus_USER_STATUS_BANNED     UserStatus = 2
	UserStatus_USER_STATUS_DELETED    UserStatus = 3
)

var UserStatus_name = map[int32]string{
	0: "USER_STATUS_NORMAL",
	1: "USER_STATUS_RESTRICTED",
	2: "USER_STATUS_BANNED",
	3: "USER_STATUS_DELETED",
}
var UserStatus_value = map[string]int32{
	"USER_STATUS_NORMAL":     0,
	"USER_STATUS_RESTRICTED": 1,
	"USER_STATUS_BANNED":     2,
	"USER_STATUS_DELETED":    3,
}

func (x UserStatus) String() string {
	return proto.EnumName(UserStatus_name, int32(x))
}
func (UserStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type KickReason int32

const (
	KickReason_KICK_NO_REASON         KickReason = 0
	KickReason_KICK_LOGIN_ELSEWHERE   KickReason = 1
	KickReason_KICK_SESSION_EXPIRED   KickReason = 2
	KickReason_KICK_ILLEGAL_OPERATION KickReason = 3
	KickReason_KICK_BANNED            KickReason = 4
)

var KickReason_name = map[int32]string{
	0: "KICK_NO_REASON",
	1: "KICK_LOGIN_ELSEWHERE",
	2: "KICK_SESSION_EXPIRED",
	3: "KICK_ILLEGAL_OPERATION",
	4: "KICK_BANNED",
}
var KickReason_value = map[string]int32{
	"KICK_NO_REASON":         0,
	"KICK_LOGIN_ELSEWHERE":   1,
	"KICK_SESSION_EXPIRED":   2,
	"KICK_ILLEGAL_OPERATION": 3,
	"KICK_BANNED":            4,
}

func (x KickReason) String() string {
	return proto.EnumName(KickReason_name, int32(x))
}
func (KickReason) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// / Common Response Header
type RspHeader struct {
	Status    int32  `protobuf:"varint,1,opt,name=status" json:"status"`
	Timestamp uint64 `protobuf:"fixed64,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Msg       string `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *RspHeader) Reset()                    { *m = RspHeader{} }
func (m *RspHeader) String() string            { return proto.CompactTextString(m) }
func (*RspHeader) ProtoMessage()               {}
func (*RspHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RspHeader) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RspHeader) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *RspHeader) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// / User Information
type UserInfo struct {
	Usn        uint64     `protobuf:"fixed64,1,opt,name=usn" json:"usn,omitempty"`
	Uid        uint64     `protobuf:"varint,2,opt,name=uid" json:"uid"`
	Avatar     string     `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
	Birthday   uint64     `protobuf:"fixed64,4,opt,name=birthday" json:"birthday,omitempty"`
	Country    string     `protobuf:"bytes,5,opt,name=country" json:"country,omitempty"`
	Email      string     `protobuf:"bytes,6,opt,name=email" json:"email,omitempty"`
	Gender     Gender     `protobuf:"varint,7,opt,name=gender,enum=proto.common.Gender" json:"gender"`
	LastLogin  uint64     `protobuf:"fixed64,8,opt,name=last_login,json=lastLogin" json:"last_login,omitempty"`
	LoginCount int32      `protobuf:"varint,9,opt,name=login_count,json=loginCount" json:"login_count"`
	Nickname   string     `protobuf:"bytes,10,opt,name=nickname" json:"nickname,omitempty"`
	Since      uint64     `protobuf:"fixed64,11,opt,name=since" json:"since,omitempty"`
	Status     UserStatus `protobuf:"varint,12,opt,name=status,enum=proto.common.UserStatus" json:"status"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserInfo) GetUsn() uint64 {
	if m != nil {
		return m.Usn
	}
	return 0
}

func (m *UserInfo) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserInfo) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *UserInfo) GetBirthday() uint64 {
	if m != nil {
		return m.Birthday
	}
	return 0
}

func (m *UserInfo) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *UserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserInfo) GetGender() Gender {
	if m != nil {
		return m.Gender
	}
	return Gender_GENDER_UNKNOWN
}

func (m *UserInfo) GetLastLogin() uint64 {
	if m != nil {
		return m.LastLogin
	}
	return 0
}

func (m *UserInfo) GetLoginCount() int32 {
	if m != nil {
		return m.LoginCount
	}
	return 0
}

func (m *UserInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *UserInfo) GetSince() uint64 {
	if m != nil {
		return m.Since
	}
	return 0
}

func (m *UserInfo) GetStatus() UserStatus {
	if m != nil {
		return m.Status
	}
	return UserStatus_USER_STATUS_NORMAL
}

type Location struct {
	Longitude string `protobuf:"bytes,1,opt,name=longitude" json:"longitude,omitempty"`
	Latitude  string `protobuf:"bytes,2,opt,name=latitude" json:"latitude,omitempty"`
	Address   string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Location) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *Location) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

func (m *Location) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// / Cryption Key Request
// / C->S
type C2SGetSeedReq struct {
	SendSeed []byte `protobuf:"bytes,1,opt,name=send_seed,json=sendSeed,proto3" json:"send_seed,omitempty"`
	RecvSeed []byte `protobuf:"bytes,2,opt,name=recv_seed,json=recvSeed,proto3" json:"recv_seed,omitempty"`
}

func (m *C2SGetSeedReq) Reset()                    { *m = C2SGetSeedReq{} }
func (m *C2SGetSeedReq) String() string            { return proto.CompactTextString(m) }
func (*C2SGetSeedReq) ProtoMessage()               {}
func (*C2SGetSeedReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *C2SGetSeedReq) GetSendSeed() []byte {
	if m != nil {
		return m.SendSeed
	}
	return nil
}

func (m *C2SGetSeedReq) GetRecvSeed() []byte {
	if m != nil {
		return m.RecvSeed
	}
	return nil
}

// / Cryption Key Response
// / S->C
type S2CGetSeedRsp struct {
	Header   *RspHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	SendSeed []byte     `protobuf:"bytes,2,opt,name=send_seed,json=sendSeed,proto3" json:"send_seed,omitempty"`
	RecvSeed []byte     `protobuf:"bytes,3,opt,name=recv_seed,json=recvSeed,proto3" json:"recv_seed,omitempty"`
}

func (m *S2CGetSeedRsp) Reset()                    { *m = S2CGetSeedRsp{} }
func (m *S2CGetSeedRsp) String() string            { return proto.CompactTextString(m) }
func (*S2CGetSeedRsp) ProtoMessage()               {}
func (*S2CGetSeedRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *S2CGetSeedRsp) GetHeader() *RspHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *S2CGetSeedRsp) GetSendSeed() []byte {
	if m != nil {
		return m.SendSeed
	}
	return nil
}

func (m *S2CGetSeedRsp) GetRecvSeed() []byte {
	if m != nil {
		return m.RecvSeed
	}
	return nil
}

// / Socket Login Request
type C2SLoginReq struct {
	Timestamp uint64 `protobuf:"fixed64,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Usn       uint64 `protobuf:"fixed64,2,opt,name=usn" json:"usn,omitempty"`
	Token     string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (m *C2SLoginReq) Reset()                    { *m = C2SLoginReq{} }
func (m *C2SLoginReq) String() string            { return proto.CompactTextString(m) }
func (*C2SLoginReq) ProtoMessage()               {}
func (*C2SLoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *C2SLoginReq) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *C2SLoginReq) GetUsn() uint64 {
	if m != nil {
		return m.Usn
	}
	return 0
}

func (m *C2SLoginReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type S2CLoginRsp struct {
	Header *RspHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *S2CLoginRsp) Reset()                    { *m = S2CLoginRsp{} }
func (m *S2CLoginRsp) String() string            { return proto.CompactTextString(m) }
func (*S2CLoginRsp) ProtoMessage()               {}
func (*S2CLoginRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *S2CLoginRsp) GetHeader() *RspHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type S2CKickNotify struct {
	Timestamp uint64     `protobuf:"fixed64,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Reason    KickReason `protobuf:"varint,2,opt,name=reason,enum=proto.common.KickReason" json:"reason"`
	Msg       string     `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *S2CKickNotify) Reset()                    { *m = S2CKickNotify{} }
func (m *S2CKickNotify) String() string            { return proto.CompactTextString(m) }
func (*S2CKickNotify) ProtoMessage()               {}
func (*S2CKickNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *S2CKickNotify) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *S2CKickNotify) GetReason() KickReason {
	if m != nil {
		return m.Reason
	}
	return KickReason_KICK_NO_REASON
}

func (m *S2CKickNotify) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*RspHeader)(nil), "proto.common.RspHeader")
	proto.RegisterType((*UserInfo)(nil), "proto.common.UserInfo")
	proto.RegisterType((*Location)(nil), "proto.common.Location")
	proto.RegisterType((*C2SGetSeedReq)(nil), "proto.common.C2SGetSeedReq")
	proto.RegisterType((*S2CGetSeedRsp)(nil), "proto.common.S2CGetSeedRsp")
	proto.RegisterType((*C2SLoginReq)(nil), "proto.common.C2SLoginReq")
	proto.RegisterType((*S2CLoginRsp)(nil), "proto.common.S2CLoginRsp")
	proto.RegisterType((*S2CKickNotify)(nil), "proto.common.S2CKickNotify")
	proto.RegisterEnum("proto.common.Cmd", Cmd_name, Cmd_value)
	proto.RegisterEnum("proto.common.ResultCode", ResultCode_name, ResultCode_value)
	proto.RegisterEnum("proto.common.Gender", Gender_name, Gender_value)
	proto.RegisterEnum("proto.common.UserStatus", UserStatus_name, UserStatus_value)
	proto.RegisterEnum("proto.common.KickReason", KickReason_name, KickReason_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1010 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdd, 0x72, 0xda, 0x46,
	0x14, 0xc7, 0x23, 0xc0, 0x04, 0x0e, 0xe0, 0x6c, 0x36, 0xae, 0xa3, 0xba, 0xed, 0x94, 0x72, 0xe5,
	0x61, 0x5a, 0x93, 0x21, 0xbd, 0xee, 0x58, 0x16, 0x6b, 0xac, 0xb1, 0x90, 0xd4, 0x5d, 0x91, 0xa4,
	0xbd, 0xa8, 0x46, 0x46, 0x1b, 0xac, 0x31, 0x48, 0xb6, 0x24, 0x32, 0xe3, 0x5e, 0x39, 0xfd, 0x4a,
	0xfb, 0x16, 0x7d, 0xb8, 0x3e, 0x48, 0x67, 0x57, 0xe2, 0xc3, 0xa6, 0xd3, 0xce, 0xf4, 0x0a, 0xfd,
	0x7f, 0xe7, 0x73, 0xcf, 0x9e, 0x05, 0x9a, 0x93, 0x78, 0x3e, 0x8f, 0xa3, 0xa3, 0xeb, 0x24, 0xce,
	0x62, 0xdc, 0x94, 0x3f, 0x47, 0x39, 0xeb, 0x30, 0xa8, 0xd3, 0xf4, 0xfa, 0x8c, 0xfb, 0x01, 0x4f,
	0xf0, 0x3e, 0x54, 0xd3, 0xcc, 0xcf, 0x16, 0xa9, 0xaa, 0xb4, 0x95, 0xc3, 0x1d, 0x5a, 0x28, 0xfc,
	0x29, 0xd4, 0xb3, 0x70, 0xce, 0xd3, 0xcc, 0x9f, 0x5f, 0xab, 0xa5, 0xb6, 0x72, 0x58, 0xa5, 0x6b,
	0x80, 0x11, 0x94, 0xe7, 0xe9, 0x54, 0x2d, 0xb7, 0x95, 0xc3, 0x3a, 0x15, 0x9f, 0x9d, 0xbf, 0x4a,
	0x50, 0x1b, 0xa7, 0x3c, 0x31, 0xa2, 0xb7, 0xb1, 0x30, 0x2f, 0xd2, 0x48, 0x66, 0xac, 0x52, 0xf1,
	0x29, 0x49, 0x18, 0xc8, 0x44, 0x15, 0x2a, 0x3e, 0x45, 0x61, 0xff, 0x9d, 0x9f, 0xf9, 0x49, 0x91,
	0xa5, 0x50, 0xf8, 0x00, 0x6a, 0x17, 0x61, 0x92, 0x5d, 0x06, 0xfe, 0xad, 0x5a, 0x91, 0x09, 0x56,
	0x1a, 0xab, 0xf0, 0x78, 0x12, 0x2f, 0xa2, 0x2c, 0xb9, 0x55, 0x77, 0x64, 0xd0, 0x52, 0xe2, 0x3d,
	0xd8, 0xe1, 0x73, 0x3f, 0x9c, 0xa9, 0x55, 0xc9, 0x73, 0x81, 0xbf, 0x84, 0xea, 0x94, 0x47, 0x01,
	0x4f, 0xd4, 0xc7, 0x6d, 0xe5, 0x70, 0xb7, 0xbf, 0x77, 0xb4, 0x39, 0x88, 0xa3, 0xa1, 0xb4, 0xd1,
	0xc2, 0x07, 0x7f, 0x06, 0x30, 0xf3, 0xd3, 0xcc, 0x9b, 0xc5, 0xd3, 0x30, 0x52, 0x6b, 0xf9, 0x99,
	0x05, 0x31, 0x05, 0xc0, 0x9f, 0x43, 0x43, 0x5a, 0x3c, 0x59, 0x53, 0xad, 0xcb, 0x71, 0x81, 0x44,
	0xba, 0x20, 0xa2, 0xf3, 0x28, 0x9c, 0x5c, 0x45, 0xfe, 0x9c, 0xab, 0x20, 0xdb, 0x58, 0x69, 0xd1,
	0x5f, 0x1a, 0x46, 0x13, 0xae, 0x36, 0x64, 0xda, 0x5c, 0xe0, 0x17, 0xab, 0xe1, 0x37, 0x65, 0x7f,
	0xea, 0xfd, 0xfe, 0xc4, 0x3c, 0x99, 0xb4, 0x2f, 0xaf, 0xa5, 0xf3, 0x03, 0xd4, 0xcc, 0x78, 0xe2,
	0x67, 0x61, 0x1c, 0x89, 0x2b, 0x9a, 0xc5, 0xd1, 0x34, 0xcc, 0x16, 0x01, 0x97, 0xb3, 0xae, 0xd3,
	0x35, 0x10, 0xdd, 0xcc, 0xfc, 0x2c, 0x37, 0x96, 0xf2, 0x6e, 0x96, 0x5a, 0xcc, 0xd1, 0x0f, 0x82,
	0x84, 0xa7, 0x69, 0x31, 0xfc, 0xa5, 0xec, 0x18, 0xd0, 0xd2, 0xfb, 0x6c, 0xc8, 0x33, 0xc6, 0x79,
	0x40, 0xf9, 0x0d, 0xfe, 0x04, 0xea, 0x29, 0x8f, 0x02, 0x2f, 0xe5, 0x3c, 0x90, 0x45, 0x9a, 0xb4,
	0x26, 0x80, 0xb0, 0x0b, 0x63, 0xc2, 0x27, 0xef, 0x72, 0x63, 0x29, 0x37, 0x0a, 0x20, 0x8c, 0x9d,
	0x1f, 0xa1, 0xc5, 0xfa, 0xfa, 0x32, 0x55, 0x7a, 0x8d, 0x7b, 0x50, 0xbd, 0x94, 0x4b, 0x27, 0xf3,
	0x34, 0xfa, 0xcf, 0xef, 0x9f, 0x76, 0xb5, 0x93, 0xb4, 0x70, 0xbb, 0x5f, 0xbb, 0xf4, 0x6f, 0xb5,
	0xcb, 0x0f, 0x6a, 0x33, 0x68, 0xe8, 0x7d, 0x26, 0xef, 0x4d, 0x1c, 0xe2, 0xde, 0x32, 0x2b, 0xff,
	0xb0, 0xcc, 0x62, 0x5b, 0x4b, 0xeb, 0x6d, 0xdd, 0x83, 0x9d, 0x2c, 0xbe, 0xe2, 0x51, 0x31, 0x9d,
	0x5c, 0x74, 0xbe, 0x81, 0x06, 0xeb, 0xeb, 0x79, 0xd2, 0xff, 0x71, 0x9c, 0xce, 0x8d, 0x1c, 0xc8,
	0x79, 0x38, 0xb9, 0xb2, 0xe2, 0x2c, 0x7c, 0x7b, 0xfb, 0x1f, 0x6d, 0xbd, 0x80, 0x6a, 0xc2, 0xfd,
	0x34, 0xce, 0x3b, 0xdb, 0x5a, 0x0e, 0x91, 0x87, 0x4a, 0x3b, 0x2d, 0xfc, 0xb6, 0x5f, 0x65, 0xf7,
	0xcf, 0x32, 0x94, 0xf5, 0x79, 0x80, 0x9b, 0x50, 0xa3, 0x84, 0x11, 0xfa, 0x8a, 0x0c, 0xd0, 0x23,
	0x8c, 0x61, 0xf7, 0x8c, 0x68, 0xd4, 0xf5, 0x4e, 0x88, 0xe6, 0x7a, 0x94, 0x7c, 0x8b, 0x94, 0x87,
	0x8c, 0x39, 0xa8, 0x84, 0x9f, 0x40, 0xe3, 0xdc, 0xd0, 0xcf, 0x3d, 0xcb, 0x76, 0x8d, 0xd3, 0xef,
	0x50, 0x05, 0x23, 0x68, 0x0e, 0x89, 0xeb, 0x31, 0x42, 0x06, 0x32, 0xec, 0xe9, 0x7d, 0xc2, 0x1c,
	0x84, 0x71, 0x0b, 0xea, 0xa6, 0x3d, 0x34, 0x2c, 0xe9, 0xf0, 0xc5, 0x86, 0x64, 0x0e, 0xea, 0xe0,
	0x5d, 0x00, 0xd3, 0x1e, 0xda, 0xe3, 0xbc, 0xec, 0xcb, 0x4d, 0xcd, 0x1c, 0xf4, 0x35, 0x46, 0xd0,
	0xb0, 0x4f, 0x4f, 0x4d, 0xc3, 0x22, 0xd2, 0xe1, 0x83, 0x82, 0x5b, 0x50, 0x73, 0x0c, 0x6b, 0x28,
	0xe5, 0xfb, 0xf6, 0x5a, 0x32, 0x07, 0xfd, 0xd4, 0xc6, 0x7b, 0xf0, 0x84, 0xda, 0xf6, 0xc8, 0xd3,
	0x6d, 0xeb, 0xd4, 0x28, 0x9c, 0x8e, 0xb7, 0xa8, 0xf0, 0x95, 0x54, 0xa7, 0x44, 0x73, 0x89, 0x27,
	0x8d, 0xc2, 0xf7, 0xe7, 0x6d, 0xca, 0x1c, 0xf4, 0xcb, 0x31, 0x7e, 0x06, 0xbb, 0xc4, 0x72, 0x09,
	0x5d, 0xbb, 0xfe, 0xba, 0x05, 0x99, 0x83, 0x7e, 0x13, 0xf1, 0xbb, 0xfa, 0x68, 0xe0, 0xe9, 0xf6,
	0x68, 0x64, 0x5b, 0x1e, 0xb1, 0x06, 0xe8, 0xee, 0xae, 0x82, 0x9f, 0x41, 0x8b, 0xbc, 0x31, 0xdc,
	0x75, 0xf8, 0x87, 0x2d, 0xc8, 0x1c, 0xf4, 0xfb, 0x5d, 0xa5, 0xfb, 0x87, 0x02, 0x40, 0x79, 0xba,
	0x98, 0x65, 0x7a, 0x1c, 0x70, 0x31, 0x2f, 0x4a, 0xd8, 0xd8, 0x74, 0x3d, 0xfb, 0x3c, 0xbf, 0xaa,
	0x42, 0xba, 0xc6, 0x88, 0xd8, 0x63, 0x17, 0x29, 0xf8, 0x29, 0xb4, 0x0a, 0x36, 0xb6, 0xb4, 0xb1,
	0x7b, 0x86, 0x4a, 0x78, 0x1f, 0xf0, 0x0a, 0x9d, 0x5b, 0xf6, 0x6b, 0xcb, 0xd3, 0x47, 0x03, 0x54,
	0xde, 0x08, 0x37, 0xac, 0x57, 0x9a, 0x69, 0x0c, 0x50, 0x05, 0x7f, 0x0c, 0x1f, 0xad, 0x98, 0x4b,
	0xa8, 0xa5, 0x99, 0x1e, 0xa1, 0xd4, 0xa6, 0x68, 0xa7, 0x7b, 0x0c, 0xd5, 0xfc, 0x3f, 0x51, 0x04,
	0x0e, 0x89, 0x35, 0x20, 0x74, 0x99, 0x10, 0x3d, 0x12, 0x75, 0x0b, 0x76, 0x4a, 0x46, 0x9a, 0x49,
	0x90, 0x22, 0x36, 0xa4, 0x40, 0x12, 0x94, 0xba, 0x37, 0x00, 0xeb, 0x7f, 0x2d, 0xd1, 0xd6, 0x98,
	0x11, 0xea, 0x31, 0x57, 0x73, 0xc7, 0xcc, 0xb3, 0x6c, 0x3a, 0xd2, 0x4c, 0xf4, 0x08, 0x1f, 0xc0,
	0xfe, 0x26, 0xa7, 0x84, 0xb9, 0xd4, 0xd0, 0x5d, 0x32, 0x40, 0xca, 0xc3, 0x98, 0x13, 0xcd, 0xb2,
	0xc8, 0x00, 0x95, 0xf0, 0x73, 0x78, 0xb6, 0xc9, 0x07, 0xc4, 0x24, 0x22, 0xa0, 0xdc, 0x7d, 0xaf,
	0x00, 0xac, 0x1f, 0x83, 0xe8, 0xbc, 0x58, 0x5a, 0x8f, 0x12, 0x8d, 0xd9, 0xa2, 0x73, 0x15, 0xf6,
	0x24, 0xcb, 0x37, 0x91, 0x98, 0x8c, 0xbc, 0x3e, 0x23, 0x54, 0x1c, 0x60, 0x69, 0x61, 0x84, 0x31,
	0x43, 0xdc, 0xdf, 0x1b, 0xc7, 0xa0, 0xb2, 0xde, 0x01, 0xec, 0x4b, 0x8b, 0x61, 0x9a, 0x64, 0xa8,
	0x99, 0x9e, 0xed, 0x10, 0xaa, 0xb9, 0x86, 0x6d, 0xa1, 0xf2, 0xea, 0x61, 0x14, 0xcd, 0x55, 0x4e,
	0xba, 0xdf, 0x1f, 0x4e, 0xc3, 0xec, 0x72, 0x71, 0x21, 0x5e, 0x67, 0x6f, 0xee, 0xa7, 0x19, 0x4f,
	0xbe, 0x9a, 0xf6, 0xe2, 0xf9, 0x34, 0xee, 0xc9, 0x57, 0xdb, 0xbb, 0xbe, 0xe8, 0xe5, 0x0f, 0xf7,
	0xa2, 0x2a, 0xc1, 0xcb, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x56, 0x98, 0x7d, 0x6c, 0xa3, 0x07,
	0x00, 0x00,
}
