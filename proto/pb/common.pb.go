// Code generated by protoc-gen-go.
// source: common.proto
// DO NOT EDIT!

/*
Package proto_common is a generated protocol buffer package.

It is generated from these files:
	common.proto

It has these top-level messages:
	RspHeader
*/
package proto_common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// commands
// S -> C : even
// C -> S : odd
type Cmd int32

const (
	Cmd_RESERVED       Cmd = 0
	Cmd_HEART_BEAT_REQ Cmd = 1
	Cmd_HEART_BEAT_RSP Cmd = 2
	Cmd_LOGIN_REQ      Cmd = 17
	Cmd_LOGIN_RSP      Cmd = 18
	Cmd_GET_SEED_REQ   Cmd = 49
	Cmd_GET_SEED_RSP   Cmd = 50
	Cmd_PING_REQ       Cmd = 4097
	Cmd_PING_RSP       Cmd = 4098
	Cmd_COMMON_END     Cmd = 65536
)

var Cmd_name = map[int32]string{
	0:     "RESERVED",
	1:     "HEART_BEAT_REQ",
	2:     "HEART_BEAT_RSP",
	17:    "LOGIN_REQ",
	18:    "LOGIN_RSP",
	49:    "GET_SEED_REQ",
	50:    "GET_SEED_RSP",
	4097:  "PING_REQ",
	4098:  "PING_RSP",
	65536: "COMMON_END",
}
var Cmd_value = map[string]int32{
	"RESERVED":       0,
	"HEART_BEAT_REQ": 1,
	"HEART_BEAT_RSP": 2,
	"LOGIN_REQ":      17,
	"LOGIN_RSP":      18,
	"GET_SEED_REQ":   49,
	"GET_SEED_RSP":   50,
	"PING_REQ":       4097,
	"PING_RSP":       4098,
	"COMMON_END":     65536,
}

func (x Cmd) String() string {
	return proto.EnumName(Cmd_name, int32(x))
}
func (Cmd) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StatusCode int32

const (
	StatusCode_OK                 StatusCode = 0
	StatusCode_TIMEOUT            StatusCode = 1
	StatusCode_UNAUTH             StatusCode = 2
	StatusCode_UNKNOWN_CMD        StatusCode = 3
	StatusCode_SRV_INTERNAL_ERROR StatusCode = 4
)

var StatusCode_name = map[int32]string{
	0: "OK",
	1: "TIMEOUT",
	2: "UNAUTH",
	3: "UNKNOWN_CMD",
	4: "SRV_INTERNAL_ERROR",
}
var StatusCode_value = map[string]int32{
	"OK":                 0,
	"TIMEOUT":            1,
	"UNAUTH":             2,
	"UNKNOWN_CMD":        3,
	"SRV_INTERNAL_ERROR": 4,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}
func (StatusCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type RspHeader struct {
	Status    StatusCode `protobuf:"varint,1,opt,name=status,enum=proto.common.StatusCode" json:"status,omitempty"`
	Timestamp uint64     `protobuf:"fixed64,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Msg       string     `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *RspHeader) Reset()                    { *m = RspHeader{} }
func (m *RspHeader) String() string            { return proto.CompactTextString(m) }
func (*RspHeader) ProtoMessage()               {}
func (*RspHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RspHeader) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_OK
}

func (m *RspHeader) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *RspHeader) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*RspHeader)(nil), "proto.common.RspHeader")
	proto.RegisterEnum("proto.common.Cmd", Cmd_name, Cmd_value)
	proto.RegisterEnum("proto.common.StatusCode", StatusCode_name, StatusCode_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4f, 0xb3, 0x40,
	0x10, 0x86, 0x0b, 0x34, 0x7c, 0x65, 0x4a, 0xfb, 0x8d, 0x73, 0x30, 0x1c, 0x3c, 0x10, 0x4f, 0x4d,
	0x0f, 0x44, 0xeb, 0x2f, 0x40, 0xd8, 0xb4, 0xa4, 0x65, 0xc1, 0x5d, 0xa8, 0xc7, 0x4d, 0xb5, 0xc4,
	0x78, 0x58, 0x69, 0x0a, 0xde, 0xab, 0xff, 0xc7, 0xff, 0x68, 0x44, 0x93, 0x56, 0x4f, 0x33, 0xef,
	0xf3, 0x3e, 0x97, 0x19, 0x70, 0x1f, 0x6b, 0xad, 0xeb, 0x97, 0x60, 0xb7, 0xaf, 0xdb, 0x9a, 0xdc,
	0x6e, 0x04, 0xdf, 0xec, 0x52, 0x83, 0x23, 0x9a, 0xdd, 0xa2, 0xda, 0x6c, 0xab, 0x3d, 0x5d, 0x81,
	0xdd, 0xb4, 0x9b, 0xf6, 0xb5, 0xf1, 0x0c, 0xdf, 0x98, 0x8c, 0x67, 0x5e, 0x70, 0xea, 0x06, 0xb2,
	0xeb, 0xa2, 0x7a, 0x5b, 0x89, 0x1f, 0x8f, 0x2e, 0xc0, 0x69, 0x9f, 0x75, 0xd5, 0xb4, 0x1b, 0xbd,
	0xf3, 0x4c, 0xdf, 0x98, 0xd8, 0xe2, 0x08, 0x08, 0xc1, 0xd2, 0xcd, 0x93, 0x67, 0xf9, 0xc6, 0xc4,
	0x11, 0x5f, 0xeb, 0xf4, 0xc3, 0x00, 0x2b, 0xd2, 0x5b, 0x72, 0x61, 0x20, 0x98, 0x64, 0x62, 0xcd,
	0x62, 0xec, 0x11, 0xc1, 0x78, 0xc1, 0x42, 0x51, 0xa8, 0x5b, 0x16, 0x16, 0x4a, 0xb0, 0x3b, 0x34,
	0xfe, 0x32, 0x99, 0xa3, 0x49, 0x23, 0x70, 0x56, 0xd9, 0x3c, 0xe1, 0x9d, 0x72, 0x76, 0x12, 0x65,
	0x8e, 0x44, 0x08, 0xee, 0x9c, 0x15, 0x4a, 0x32, 0x16, 0x77, 0xc2, 0xf5, 0x6f, 0x22, 0x73, 0x9c,
	0xd1, 0x08, 0x06, 0x79, 0xc2, 0xe7, 0x5d, 0xff, 0xe6, 0x1f, 0xa3, 0xcc, 0xf1, 0xdd, 0x27, 0x04,
	0x88, 0xb2, 0x34, 0xcd, 0xb8, 0x62, 0x3c, 0xc6, 0xc3, 0xa1, 0x3f, 0x5d, 0x03, 0x1c, 0xaf, 0x26,
	0x1b, 0xcc, 0x6c, 0x89, 0x3d, 0x1a, 0xc2, 0xbf, 0x22, 0x49, 0x59, 0x56, 0x16, 0x68, 0x10, 0x80,
	0x5d, 0xf2, 0xb0, 0x2c, 0x16, 0x68, 0xd2, 0x7f, 0x18, 0x96, 0x7c, 0xc9, 0xb3, 0x7b, 0xae, 0xa2,
	0x34, 0x46, 0x8b, 0xce, 0x81, 0xa4, 0x58, 0xab, 0x84, 0x17, 0x4c, 0xf0, 0x70, 0xa5, 0x98, 0x10,
	0x99, 0xc0, 0xfe, 0x83, 0xdd, 0x3d, 0xf6, 0xe6, 0x33, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x67, 0x9f,
	0x8c, 0x9b, 0x01, 0x00, 0x00,
}
